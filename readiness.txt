❯ kubectl get pods -n amazon-cloudwatch
NAME                     READY   STATUS    RESTARTS      AGE
cloudwatch-agent-648vb   1/1     Running   0             37d
cloudwatch-agent-df4db   1/1     Running   1 (37d ago)   37d
cloudwatch-agent-gcsnr   1/1     Running   1 (37d ago)   37d
cloudwatch-agent-gs4nh   1/1     Running   1 (37d ago)   37d
cloudwatch-agent-q8jvf   1/1     Running   1 (37d ago)   37d
cloudwatch-agent-qgwb9   1/1     Running   0             14h
cloudwatch-agent-qltd5   1/1     Running   1 (37d ago)   37d
❯ kubectl describe pod cloudwatch-agent-648vb -n amazon-cloudwatch
Name:             cloudwatch-agent-648vb
Namespace:        amazon-cloudwatch
Priority:         0
Service Account:  cloudwatch-agent
Node:             ip-172-17-11-119.ec2.internal/172.17.11.119
Start Time:       Fri, 01 Aug 2025 16:29:37 +0530
Labels:           DA_Component=CW-AGENT
                  DA_Developer=rupesh.narra
                  DA_Service=MONIT
                  DA_Sub_Component=CW-AGENT
                  Stage=prd
                  controller-revision-hash=856c6d8d48
                  name=cloudwatch-agent
                  pod-template-generation=1
Annotations:      <none>
Status:           Running
IP:               172.17.11.14
IPs:
  IP:           172.17.11.14
Controlled By:  DaemonSet/cloudwatch-agent
Containers:
  cloudwatch-agent:
    Container ID:   containerd://21ec6269d98148783a4b69b43bace5bbf189147a90ad3320e13c7d6c2315d897
    Image:          833376745199.dkr.ecr.us-east-1.amazonaws.com/amazon/cloudwatch-agent:1.300032.3b392
    Image ID:       833376745199.dkr.ecr.us-east-1.amazonaws.com/amazon/cloudwatch-agent@sha256:f57a71e02a19be7d8abcc1bebe963b28674cf03a5a0ee14a18a9ed629359ce59
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Fri, 01 Aug 2025 16:29:56 +0530
    Ready:          True
    Restart Count:  0
    Limits:
      cpu:     300m
      memory:  500Mi
    Requests:
      cpu:     300m
      memory:  500Mi
    Environment:
      HOST_IP:                       (v1:status.hostIP)
      HOST_NAME:                     (v1:spec.nodeName)
      K8S_NAMESPACE:                amazon-cloudwatch (v1:metadata.namespace)
      CI_VERSION:                   k8s/1.3.11
      AWS_STS_REGIONAL_ENDPOINTS:   regional
      AWS_DEFAULT_REGION:           us-east-1
      AWS_REGION:                   us-east-1
      AWS_ROLE_ARN:                 arn:aws:iam::833376745199:role/cloudwatch-agent-sa-prd-na
      AWS_WEB_IDENTITY_TOKEN_FILE:  /var/run/secrets/eks.amazonaws.com/serviceaccount/token
    Mounts:
      /dev/disk from devdisk (ro)
      /etc/cwagentconfig from cwagentconfig (rw)
      /rootfs from rootfs (ro)
      /run/containerd/containerd.sock from containerdsock (ro)
      /sys from sys (ro)
      /var/lib/docker from varlibdocker (ro)
      /var/run/docker.sock from dockersock (ro)
      /var/run/secrets/eks.amazonaws.com/serviceaccount from aws-iam-token (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2ml9p (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True
  Initialized                 True
  Ready                       True
  ContainersReady             True
  PodScheduled                True
Volumes:
  aws-iam-token:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  86400
  cwagentconfig:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      cwagentconfig
    Optional:  false
  rootfs:
    Type:          HostPath (bare host directory volume)
    Path:          /
    HostPathType:
  dockersock:
    Type:          HostPath (bare host directory volume)
    Path:          /var/run/docker.sock
    HostPathType:
  varlibdocker:
    Type:          HostPath (bare host directory volume)
    Path:          /var/lib/docker
    HostPathType:
  containerdsock:
    Type:          HostPath (bare host directory volume)
    Path:          /run/containerd/containerd.sock
    HostPathType:
  sys:
    Type:          HostPath (bare host directory volume)
    Path:          /sys
    HostPathType:
  devdisk:
    Type:          HostPath (bare host directory volume)
    Path:          /dev/disk/
    HostPathType:
  kube-api-access-2ml9p:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Guaranteed
Node-Selectors:              <none>
Tolerations:                 op=Exists
                             node.kubernetes.io/disk-pressure:NoSchedule op=Exists
                             node.kubernetes.io/memory-pressure:NoSchedule op=Exists
                             node.kubernetes.io/not-ready:NoExecute op=Exists
                             node.kubernetes.io/pid-pressure:NoSchedule op=Exists
                             node.kubernetes.io/unreachable:NoExecute op=Exists
                             node.kubernetes.io/unschedulable:NoSchedule op=Exists
